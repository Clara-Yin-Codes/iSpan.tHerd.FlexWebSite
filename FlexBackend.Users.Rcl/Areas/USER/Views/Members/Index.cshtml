@using FlexBackend.UIKit.Rcl.Views.Shared.Components.DataTable
@{
    // Demo：等同於你原本頁面內的 employees + 欄位設定
    var employees = new[]
    {
        new { Name = "Tiger Nixon",   Position="System Architect", Office="Edinburgh", Age=61, StartDate="2011/04/25", Salary="$320,800", Email="tiger.nixon@example.com",   Notes="喜歡打高爾夫，兼職顧問" },
        new { Name = "Garrett Winters", Position="Accountant",     Office="Tokyo",     Age=63, StartDate="2011/07/25", Salary="$170,750", Email="garrett.winters@example.com", Notes="主要負責審計，會日文" }
    };

    var vm = new DataTableViewModel
    {
        TableId = "EmployeesTable",
        Headers = new[] { "", "Name", "Position", "Office", "Age", "Start date", "Salary" },
        ColumnsJson =
            // 第一欄是 dt-control，其餘 data 對應屬性
            "[{\"className\":\"dt-control\",\"orderable\":false,\"data\":null,\"defaultContent\":\"\"}," +
             "{\"data\":\"Name\"}," +
             "{\"data\":\"Position\"}," +
             "{\"data\":\"Office\"}," +
             "{\"data\":\"Age\"}," +
             "{\"data\":\"StartDate\"}," +
             "{\"data\":\"Salary\"}]",
        DataJson = System.Text.Json.JsonSerializer.Serialize(employees),
        EnableChildRow = true,
        ChildFields = new[] { "Email", "Notes" },
        ChildFieldLabels = new Dictionary<string, string> { ["Email"] = "Email：", ["Notes"] = "備註：" },
        PageLength = 10,
        LengthMenu = new[] { 5, 10, 25, 50 },
        FixedLeftColumns = 1,
        FixedRightColumns = 0,
        Theme = "purple"
    };
}
@await Component.InvokeAsync("DataTable", vm)
